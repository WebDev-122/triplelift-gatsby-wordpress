{"version":3,"sources":["webpack://triplelift-gatsby-wordpress/./src/templates/blog-post-archive.js"],"names":["data","pageContext","nextPagePath","previousPagePath","posts","allWpPost","nodes","length","isHomePage","title","className","map","post","uri","date","image","getImage","featuredImage","node","localFile","key","href","itemScope","itemType","G","alt","Link","to"],"mappings":"4MAkFA,UA1EkB,SAAC,GAGZ,IAFLA,EAEI,EAFJA,KAEI,IADJC,YAAeC,EACX,EADWA,aAAcC,EACzB,EADyBA,iBAEvBC,EAAQJ,EAAKK,UAAUC,MAE7B,OAAKF,EAAMG,OAaT,gBAAC,IAAD,CAAQC,YAAU,GAChB,gBAAC,IAAD,CAAKC,MAAM,cACX,uBAAKC,UAAU,aACb,uBAAKA,UAAU,2BACb,uBAAKA,UAAU,iCACZN,EAAMO,KAAI,SAACC,GAAU,IAAD,QACXH,EAAqBG,EAArBH,MAAOI,EAAcD,EAAdC,IAAKC,EAASF,EAATE,KACdC,GAAQC,OAAQ,UAACJ,EAAKK,qBAAN,iBAAC,EAAoBC,YAArB,aAAC,EAA0BC,WAEjD,OACE,qBAAGC,IAAKR,EAAKC,IAAKQ,KAAMR,EAAKH,UAAU,yDACrC,2BACEA,UAAU,iBACVY,WAAS,EACTC,SAAS,6BAERR,GACC,gBAAC,EAAAS,EAAD,CACET,MAAOA,EACPU,KAAK,UAAAb,EAAKK,qBAAL,mBAAoBC,YAApB,eAA0BO,MAA1B,KAGT,uBAAKf,UAAU,kBACb,wBAAMA,UAAU,SACbD,GAEH,2BACE,wBAAMC,UAAU,QAAQI,WAQtC,uBAAKJ,UAAU,cACb,sBAAIA,UAAU,OACXP,GACC,gCACE,0BAAI,gBAAC,EAAAuB,KAAD,CAAMC,GAAIxB,GAAV,cAGPD,GACC,gCACE,0BAAI,gBAAC,EAAAwB,KAAD,CAAMC,GAAIzB,GAAV,eAvDhB,gBAAC,IAAD,CAAQM,YAAU,GAChB,gBAAC,IAAD,CAAKC,MAAM,cACX","file":"component---src-templates-blog-post-archive-js-926f9fea7967bb0e60a0.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n// import parse from \"html-react-parser\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\r\n\r\nconst BlogIndex = ({\r\n  data,\r\n  pageContext: { nextPagePath, previousPagePath },\r\n}) => {\r\n  const posts = data.allWpPost.nodes\r\n\r\n  if (!posts.length) {\r\n    return (\r\n      <Layout isHomePage>\r\n        <Seo title=\"All posts\" />\r\n        <p>\r\n          No blog posts found. Add posts to your WordPress site and they'll\r\n          appear here!\r\n        </p>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout isHomePage>\r\n      <Seo title=\"All posts\" />\r\n      <div className=\"blog-page\">\r\n        <div className=\"bland-section-container\">\r\n          <div className=\"bland-section-inner-container\">\r\n            {posts.map((post) => {\r\n              const { title, uri, date } = post\r\n              const image = getImage(post.featuredImage?.node?.localFile)\r\n\r\n              return (\r\n                <a key={post.uri} href={uri} className=\"bland-section-inner-item blog-post-container shadow-1\">\r\n                  <article\r\n                    className=\"post-list-item\"\r\n                    itemScope\r\n                    itemType=\"http://schema.org/Article\"\r\n                  >\r\n                    {image && (\r\n                      <GatsbyImage\r\n                        image={image}\r\n                        alt={post.featuredImage?.node?.alt || ``}\r\n                      />\r\n                    )}\r\n                    <div className=\"copy-container\">\r\n                      <span className=\"title\">\r\n                        {title}\r\n                      </span>\r\n                      <div>\r\n                        <span className=\"date\">{date}</span>\r\n                      </div>\r\n                    </div>\r\n                  </article>\r\n                </a>\r\n              )\r\n            })}\r\n          </div>\r\n          <div className=\"pagination\">\r\n            <ul className=\"nav\">\r\n              {previousPagePath && (\r\n                <>\r\n                  <li><Link to={previousPagePath}>Previous</Link></li>\r\n                </>\r\n              )}\r\n              {nextPagePath && (\r\n                <>\r\n                  <li><Link to={nextPagePath}>Next</Link></li>\r\n                </>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query WordPressPostArchive($offset: Int!, $postsPerPage: Int!) {\r\n    allWpPost(\r\n      sort: { fields: [date], order: DESC }\r\n      limit: $postsPerPage\r\n      skip: $offset\r\n    ) {\r\n      nodes {\r\n        ...postTemplateFragment\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}